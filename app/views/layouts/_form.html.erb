<% new_object = false %>
<% new_object = true if defined? new %>
<div <%= 'class="bubble"'.html_safe if new_object -%> id="<%= "new_" if new_object -%>slider_<%= @ajax_id %>_<%= @object.class -%>_<%= @object.id -%>" <%= 'style="display:none;"'.html_safe if request.xhr? and not defined? from_vcs %>>
	<%= form_for object, :remote => request.xhr? do |f| %>
		<%= hidden_field_tag(:ajax_id, @ajax_id) %>
		<%= hidden_field_tag(:show_id, @show_id) if @show_id %>
		<%= hidden_field_tag(:vcs, true) if defined? from_vcs %>
		<%= hidden_field_tag(:undo, true) if defined? undo %>
		<%= hidden_field_tag(:from_show_table, @from_show_table) if @from_show_table %>
		<%= f.error_messages %>
		<% if defined? from_vcs %>
			<div class="hidden">
		<% end -%>
		<table class="table table-condensed table-hover table-bordered table-striped">
			<thead>
				<tr>
					<th>
						<%= t :attribute %>
					</th>
					<th>
						<%= t :value %>
					</th>
					<th width="12pt;">
						<%= close_button(@object, :new => new_object, :non_dropdown_view => (defined? non_dropdown_view)) %>
					</th>
				</tr>
			</thead>
			<tbody>
				<% (object.class.sorted_attributes - [:created_at, :updated_at]).each do |attribute| %>
					<%= render :partial => "layouts/form_element", :locals => {:attribute => attribute, :f => f, :object => object, :new_object => new_object} %>
				<% end -%>
				<%= render(:partial => "layouts/form_element", :locals => {:attribute => :_color, :f => f, :object => object, :new_object => new_object}) if object.class.colored? and not new_object %>
			</tbody>
		</table>
		<% if defined? from_vcs %>
			</div> <!-- hidden div -->
		<% end -%>
		<% object.class.hidden_fields.each do |attribute| -%>
			<%= f.hidden_field(attribute) %>
		<% end -%>
		<% object.class.belongs_to_hidden_fields.each do |attribute| %>
			<%= f.hidden_field(attribute) %>
		<% end -%>
		<% if defined? additional_partials and not defined? from_vcs -%>
			<% additional_partials.each do |partial| %>
				<%= render :partial => partial, :locals => {:f => f, :object => object} %>
			<% end -%>
		<% end -%>
		<% if not defined? from_vcs %>
			<%= f.submit(:class => "btn btn-success spinner", data: {disable_with: submit_default_value(object)}) %>
			<%= close_button(@object, :button_text => t(:cancel), :button => true, :new => new_object, :non_dropdown_view => (defined? non_dropdown_view)) %>
		<% else -%>
			<%= submit_tag(t(:restore), :class => "btn btn-success spinner", data: {disable_with: t(:restore)}) %>
		<% end -%>
		
		<div id="ajax_placeholder">
			<!-- nothing in here, ajax may put stuff in here. -->
		</div>
	<% end %>
</div>
